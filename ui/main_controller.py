from telegram import ReplyKeyboardMarkup, KeyboardButton

from DB.user import User
from GigaChat.GigaChat import GigaChat
from GigaChat.ContextManager import ContextManager

from ui.locale import *


async def main_controller(user: User, GG: GigaChat, text: str):
    try:
        if text == CREATE_NEW_TRIP_TEXT:
            user.context = []
            user.available_trips -= 1
            user.update()

            return {
                "text": "–û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –≤–∞—à–µ –Ω–æ–≤–æ–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!",
                "rm": get_create_new_trip_btn(),
            }


        else:
            manager: ContextManager = ContextManager(user)
            manager.add_message("user", text)

            answer = await GG.generate_answer(user.context)

            make_additional_request, context = manager.add_message(answer["role"], answer["content"])
            flag_add_request = True
            for i in range(5):
                if make_additional_request:
                    answer = await GG.generate_answer(context)
                    print(answer)
                    make_additional_request, context = manager.add_message(role="assistant", text=answer["content"])

                if not make_additional_request:
                    flag_add_request = False
                    break

            if not flag_add_request:
                return {
                    "text": answer["content"],
                    "rm": get_create_new_trip_btn(),
                }

            else:
                return {
                    "text": get_not_found_text(),
                    "rm": get_create_new_trip_btn(),
                }

    except Exception as e:
        print(e)
        return {"text": "–ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫", "rm": get_create_new_trip_btn()}

def get_create_new_trip_btn():
    return ReplyKeyboardMarkup(
            [
                [KeyboardButton(text=CREATE_NEW_TRIP_TEXT)],
            ],
            resize_keyboard=True,
        )

def get_pay_btn():
    return ReplyKeyboardMarkup(
        [
            [
                KeyboardButton(text=PAY_BTN_TEXT)
            ]
        ],
        resize_keyboard=True,
    )

def get_pay_text():
    return """–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! 

–í–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã –∏—Å—á–µ—Ä–ø–∞–Ω—ã. üõë –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–µ–∑–¥–æ–∫ –ø–æ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ —Å –¢—É—Ä–ù–µ–π—Ä–æ, –ø—Ä–æ—Å–∏–º –≤–∞—Å –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å. üí≥‚ú® 

–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º –º–∞—Ä—à—Ä—É—Ç–∞–º, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –º–µ—Å—Ç–∞–º! üåäüè∞  –û–ø–ª–∞—Ç–∏—Ç–µ –Ω–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ –ø—É—Å—Ç—å –≤–∞—à–∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –±—É–¥—É—Ç –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–º–∏! 

–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û–ø–ª–∞—Ç–∏—Ç—å" –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º. 

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –¢—É—Ä–ù–µ–π—Ä–æ! üåü"""

def get_on_pay_text():
    return """–û–ø–ª–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! üéâ 

–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∞—à–µ–π –Ω–æ–≤–æ–π –ø–æ–µ–∑–¥–∫–∏. üó∫‚ú® 

–°–Ω–æ–≤–∞ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö –∫ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—é üòäüóì"""

def get_not_found_text():
    return """–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –≤–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–µ–∑–¥–∫–∏ –ø–æ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. üòî

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ! –ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. üåç‚ú®

–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ! üôè"""